fact

.model small
.data
.code
start:
    mov cx,10       ; CX will be used as the counter from ur no down to 1
    mov bx, 1        ; BX will hold the factorial result, start at 1

    mov ax, 1        ; AX starts at 1, since factorial calculation starts from 1*2*3*...*n
calculate_factorial:
    mul cx           ; Multiply AX by CX, result in DX:AX if overflow, else in AX
    mov bx, ax       ; Store the result from AX into BX
    dec cx           ; Decrement CX each step
    jnz calculate_factorial ; Continue until CX decrements to 0

    ; Now BX contains the factorial of ur no
    int 03h          ; Breakpoint interrupt (for debugging)

    mov ax, 4c00h    ; Prepare to terminate the program
    int 21h          ; DOS interrupt to terminate the program

end start
                                
                                
                                


